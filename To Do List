#include <iostream>
#include <vector>
#include <string>

using namespace std;

struct Task {
    string description;
    bool completed;

    Task(string desc) {
        description = desc;
        completed = false;
    }
};

void menu_list() {
    cout << "\nTo-Do List Manager\n";
    cout << "1. Add Task\n";
    cout << "2. View Tasks\n";
    cout << "3. Mark Task as Completed\n";
    cout << "4. Remove Task\n";
    cout << "5. Exit\n";
    cout << "Choose an option in 1 to 5= ";
}

void add_Task(vector<Task>& tasks) {
    string desc;
    cout << "Enter Your Task: ";
    cin.ignore();
    getline(cin, desc);
    tasks.push_back(Task(desc));
    cout << "Task added successfully.\n";
}

void view_Tasks(const vector<Task>& tasks) {
    if (tasks.empty()) {
        cout << "No any tasks to display.\n";
        return;
    }
    cout << "\nTo-Do List:\n";
    for (size_t i = 0; i < tasks.size(); ++i) {
        cout << i + 1 <<"."<< tasks[i].description
             << " - " << (tasks[i].completed ? "Completed" : "Pending") << "\n";
    }
}

void mark_TaskCompleted(vector<Task>& tasks) {
    view_Tasks(tasks);
    if (tasks.empty()) return;

    int num;
    cout << "Enter the task number to mark as completed: ";
    cin >> num;
    if (num >= 1 && num <= tasks.size()) {
        tasks[num - 1].completed = true;
        cout << "Task marked as completed.\n";
    } else {
        cout << "Invalid task number.\n";
    }
}

void remove_Task(vector<Task>& tasks) {
    view_Tasks(tasks);
    if (tasks.empty()) return;

    int num;
    cout << "Enter the task number to remove: ";
    cin >> num;
    if (num >= 1 && num <= tasks.size()) {
        cout << "Removed task: " << tasks[num - 1].description << "\n";
        tasks.erase(tasks.begin() + num - 1);
    } else {
        cout << "Invalid task number.\n";
    }
}

int main() {
    vector<Task> tasks;
    int your_choice;

    while (true) {
        menu_list();
        cin >> your_choice;

        switch (your_choice) {
            case 1:
                add_Task(tasks);
                break;
            case 2:
                view_Tasks(tasks);
                break;
            case 3:
                mark_TaskCompleted(tasks);
                break;
            case 4:
                remove_Task(tasks);
                break;
            case 5:
                cout << "Exiting To-Do List Manager... Goodbye\n";
                return 0;
            default:
                cout << "Invalid choice. Please enter a number between 1 and 5.\n";
        }
    }

    return 0;
}
